<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <x:Double x:Key="IconAndTitleSpacing">10</x:Double>
    <x:Double x:Key="ContainerElementSpacing">5</x:Double>
    <x:Double x:Key="ComputeSystemIcon12px">12</x:Double>
    <x:Double x:Key="ComputeSystemImage64px">64</x:Double>

    <!-- Style for the grid that acts as the root element for the Horizontal card -->
    <Style
        x:Key="HorizontalCardRoot"
        TargetType="Grid">
        <Setter Property="Padding" Value="10 0 10 10" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorDefaultBrush}" />
        <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultBrush}" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
    </Style>

    <Style
        x:Key="HorizontalCardRootWithUniformedPadding"
        TargetType="Grid"
        BasedOn="{StaticResource HorizontalCardRoot}">
        <Setter Property="Padding" Value="10" />
    </Style>

    <!--
        This is needed so the margin and padding of the ListViewItem covers the Horizontal card exactly.
        The default style adds extra margins and padding so we need to reduce them. When needing to select
        a horizontal card using the listview's selection mode use this style for the list view's item container.
    -->
    <Style
        x:Key="HorizontalCardListViewItemContainerStyle"
        TargetType="ListViewItem"
        BasedOn="{StaticResource DefaultListViewItemStyle}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0 0 0 3"/>
        <Setter Property="Padding" Value="3 1 3 1"/>
    </Style>

    <!--
        Style for horizontal three dots. Taken from PowerToys styles 
        See: https://github.com/microsoft/PowerToys/blob/main/src/settings-ui/Settings.UI/SettingsXAML/Styles/Button.xaml
    -->
    <SolidColorBrush x:Key="SubtleButtonBackground" Color="{ThemeResource SubtleFillColorTransparent}" />
    <SolidColorBrush x:Key="SubtleButtonBackgroundPointerOver" Color="{ThemeResource SubtleFillColorSecondary}" />
    <SolidColorBrush x:Key="SubtleButtonBackgroundPressed" Color="{ThemeResource SubtleFillColorTertiary}" />
    <SolidColorBrush x:Key="SubtleButtonBackgroundDisabled" Color="{ThemeResource SubtleFillColorTransparent}" />
    <SolidColorBrush x:Key="SubtleButtonForeground" Color="{ThemeResource TextFillColorPrimary}" />
    <SolidColorBrush x:Key="SubtleButtonForegroundPointerOver" Color="{ThemeResource TextFillColorPrimary}" />
    <SolidColorBrush x:Key="SubtleButtonForegroundPressed" Color="{ThemeResource TextFillColorSecondary}" />
    <SolidColorBrush x:Key="SubtleButtonForegroundDisabled" Color="{ThemeResource TextFillColorDisabled}" />

    <Style x:Key="SubtleButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{ThemeResource SubtleButtonBackground}" />
        <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
        <Setter Property="Foreground" Value="{ThemeResource SubtleButtonForeground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="36" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Height" Value="36" />
        <Setter Property="Padding" Value="{StaticResource ButtonPadding}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="FocusVisualMargin" Value="-3" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter
                        x:Name="ContentPresenter"
                        Padding="{TemplateBinding Padding}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        AnimatedIcon.State="Normal"
                        AutomationProperties.AccessibilityView="Raw"
                        Background="{TemplateBinding Background}"
                        BackgroundSizing="{TemplateBinding BackgroundSizing}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTransitions="{TemplateBinding ContentTransitions}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <ContentPresenter.BackgroundTransition>
                            <BrushTransition Duration="0:0:0.083" />
                        </ContentPresenter.BackgroundTransition>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackgroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.(AnimatedIcon.State)" Value="PointerOver" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackgroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.(AnimatedIcon.State)" Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonBackgroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SubtleButtonForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <!--  DisabledVisual Should be handled by the control, not the animated icon.  -->
                                        <Setter Target="ContentPresenter.(AnimatedIcon.State)" Value="Normal" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </ContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="EnvironmentscrollViewerStyle"
        TargetType="ScrollViewer">
        <Setter Property="Margin" Value="0,22,0,0" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>

    <Style 
        x:Key="CardHeaderContainerStyle"
        TargetType="Grid">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="ColumnSpacing" Value="20" />
    </Style>

    <Style 
        x:Key="ComputeSystemCaptionIconAndTitleContainerStyle" 
        TargetType="Grid">
        <Setter Property="Margin" Value="5,0,10,0" />
        <Setter Property="ColumnSpacing" Value="{StaticResource IconAndTitleSpacing}" />
    </Style>

    <Style 
        x:Key="ComputeSystemIconStyle" 
        TargetType="Viewbox">
        <Setter Property="Width" Value="{StaticResource ComputeSystemIcon12px}" />
        <Setter Property="Height" Value="{StaticResource ComputeSystemIcon12px}" />
    </Style>

    <Style 
        x:Key="ComputeSystemIconBackgroundStyle" 
        TargetType="Rectangle">
        <Setter Property="Fill" Value="White" />
        <Setter Property="Stroke" Value="Black" />
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="RadiusY" Value="2" />
        <Setter Property="RadiusX" Value="2" />
        <Setter Property="Width" Value="{StaticResource ComputeSystemIcon12px}" />
        <Setter Property="Height" Value="{StaticResource ComputeSystemIcon12px}" />
    </Style>

    <Style 
        x:Key="ComputeSystemIconBorderStyle" 
        TargetType="Border">
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="MaxHeight" Value="{StaticResource ComputeSystemIcon12px}" />
        <Setter Property="MaxWidth" Value="{StaticResource ComputeSystemIcon12px}" />
    </Style>

    <Style 
        x:Key="ComputeSystemTitleStyle"  
        BasedOn="{StaticResource CaptionTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{ThemeResource TextFillColorPrimaryBrush}" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>


    <Style
        x:Key="HorizontalThreeDotsContainerStyle" 
        TargetType="Grid">
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <Style
        x:Key="HorizontalThreeDotsStyle" 
        BasedOn="{StaticResource SubtleButtonStyle}"
        TargetType="Button">
        <Setter Property="Content" Value="&#xE712;" />
        <Setter Property="FontFamily" Value="{StaticResource SymbolThemeFontFamily}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <Style
        x:Key="CardBodyContainerStyle" 
        TargetType="Grid">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="ColumnSpacing" Value="10" />
        <Setter Property="Margin" Value="0 3 0 0" />
    </Style>

    <Style
        x:Key="CardBodyStackPanelStyle" 
        TargetType="StackPanel">
        <Setter Property="Spacing" Value="5" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <Style 
        x:Key="ComputeSystemImageStyle" 
        TargetType="Viewbox">
        <Setter Property="Width" Value="{StaticResource ComputeSystemImage64px}" />
        <Setter Property="Height" Value="{StaticResource ComputeSystemImage64px}" />
    </Style>

    <Style 
        x:Key="ComputeSystemImageBackgroundStyle" 
        TargetType="Rectangle">
        <Setter Property="Fill" Value="White" />
        <Setter Property="Stroke" Value="Black" />
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="RadiusY" Value="2" />
        <Setter Property="RadiusX" Value="2" />
        <Setter Property="Width" Value="{StaticResource ComputeSystemImage64px}" />
        <Setter Property="Height" Value="{StaticResource ComputeSystemImage64px}" />
    </Style>

    <Style 
        x:Key="ComputeSystemImageBorderStyle" 
        TargetType="Border">
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="MaxHeight" Value="{StaticResource ComputeSystemImage64px}" />
        <Setter Property="MaxWidth" Value="{StaticResource ComputeSystemImage64px}" />
    </Style>

    <Style 
        x:Key="CardBodyStackPanelTextBlockStyle"  
        BasedOn="{StaticResource BodyStrongTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="Margin" Value="0,0,0,-2" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>

    <Style
        x:Key="CardBodyElipsisStyle" 
        TargetType="Ellipse">
        <Setter Property="Width" Value="4" />
        <Setter Property="Height" Value="4" />
    </Style>

    <Style 
        x:Key="CardBodyStateTextBlockStyle"  
        BasedOn="{StaticResource CaptionTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="Foreground" Value="{ThemeResource TextFillColorSecondaryBrush}" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>

    <Style 
        x:Key="CardBodyComputeSystemPropertiesStyle"
        TargetType="Grid">
        <Setter Property="Padding" Value="-10,-10,0,0" />
    </Style>

    <Style 
        x:Key="CardBodyWrapGridStyle"
        TargetType="ItemsWrapGrid">
        <Setter Property="MaximumRowsOrColumns" Value="3" />
        <Setter Property="GroupPadding" Value="-5,0,0,0" />
        <Setter Property="Orientation" Value="Horizontal" />
    </Style>

</ResourceDictionary>
